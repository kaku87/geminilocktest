<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.example.optimisticlock.repository.ProductRepositoryTest" time="1.812" tests="7" errors="2" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/guohaijiao/geminilocktest/target/test-classes:/Users/guohaijiao/geminilocktest/target/classes:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.5/spring-boot-starter-web-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.5/spring-boot-starter-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.5/spring-boot-autoconfigure-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.5/spring-boot-starter-logging-2.7.5.jar:/Users/guohaijiao/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/guohaijiao/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/guohaijiao/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/guohaijiao/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/guohaijiao/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/guohaijiao/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/guohaijiao/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.5/spring-boot-starter-json-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.4/jackson-annotations-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.4/jackson-core-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.4/jackson-datatype-jdk8-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.4/jackson-datatype-jsr310-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.4/jackson-module-parameter-names-2.13.4.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.5/spring-boot-starter-tomcat-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.68/tomcat-embed-core-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.68/tomcat-embed-el-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.68/tomcat-embed-websocket-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-web/5.3.23/spring-web-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-beans/5.3.23/spring-beans-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-webmvc/5.3.23/spring-webmvc-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-aop/5.3.23/spring-aop-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-context/5.3.23/spring-context-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-expression/5.3.23/spring-expression-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.2.2/mybatis-spring-boot-starter-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.5/spring-boot-starter-jdbc-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-jdbc/5.3.23/spring-jdbc-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.2.2/mybatis-spring-boot-autoconfigure-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/mybatis/3.5.9/mybatis-3.5.9.jar:/Users/guohaijiao/.m2/repository/org/mybatis/mybatis-spring/2.0.7/mybatis-spring-2.0.7.jar:/Users/guohaijiao/.m2/repository/com/mysql/mysql-connector-j/8.0.31/mysql-connector-j-8.0.31.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.7.5/spring-boot-starter-test-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-test/2.7.5/spring-boot-test-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.7.5/spring-boot-test-autoconfigure-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar:/Users/guohaijiao/.m2/repository/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar:/Users/guohaijiao/.m2/repository/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar:/Users/guohaijiao/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/guohaijiao/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/guohaijiao/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/guohaijiao/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/guohaijiao/.m2/repository/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0.jar:/Users/guohaijiao/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/guohaijiao/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/guohaijiao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/Users/guohaijiao/.m2/repository/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1.jar:/Users/guohaijiao/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/guohaijiao/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.18/byte-buddy-agent-1.12.18.jar:/Users/guohaijiao/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/guohaijiao/.m2/repository/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1.jar:/Users/guohaijiao/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/guohaijiao/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-core/5.3.23/spring-core-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-jcl/5.3.23/spring-jcl-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-test/5.3.23/spring-test-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0.jar:/Users/guohaijiao/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/guohaijiao/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter-test/2.2.2/mybatis-spring-boot-starter-test-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-test-autoconfigure/2.2.2/mybatis-spring-boot-test-autoconfigure-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-tx/5.3.23/spring-tx-5.3.23.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="JP"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/guohaijiao/geminilocktest/target/surefire/surefirebooter9036444889196405599.jar /Users/guohaijiao/geminilocktest/target/surefire 2025-09-20T11-23-20_893-jvmRun1 surefire15425680516076992311tmp surefire_014977147656356718306tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/guohaijiao/geminilocktest/target/test-classes:/Users/guohaijiao/geminilocktest/target/classes:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.5/spring-boot-starter-web-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.5/spring-boot-starter-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.5/spring-boot-autoconfigure-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.5/spring-boot-starter-logging-2.7.5.jar:/Users/guohaijiao/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/guohaijiao/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/guohaijiao/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/guohaijiao/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/guohaijiao/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/guohaijiao/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/guohaijiao/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.5/spring-boot-starter-json-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4.2/jackson-databind-2.13.4.2.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.4/jackson-annotations-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.4/jackson-core-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.4/jackson-datatype-jdk8-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.4/jackson-datatype-jsr310-2.13.4.jar:/Users/guohaijiao/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.4/jackson-module-parameter-names-2.13.4.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.5/spring-boot-starter-tomcat-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.68/tomcat-embed-core-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.68/tomcat-embed-el-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.68/tomcat-embed-websocket-9.0.68.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-web/5.3.23/spring-web-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-beans/5.3.23/spring-beans-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-webmvc/5.3.23/spring-webmvc-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-aop/5.3.23/spring-aop-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-context/5.3.23/spring-context-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-expression/5.3.23/spring-expression-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.2.2/mybatis-spring-boot-starter-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.5/spring-boot-starter-jdbc-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-jdbc/5.3.23/spring-jdbc-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.2.2/mybatis-spring-boot-autoconfigure-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/mybatis/3.5.9/mybatis-3.5.9.jar:/Users/guohaijiao/.m2/repository/org/mybatis/mybatis-spring/2.0.7/mybatis-spring-2.0.7.jar:/Users/guohaijiao/.m2/repository/com/mysql/mysql-connector-j/8.0.31/mysql-connector-j-8.0.31.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.7.5/spring-boot-starter-test-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-test/2.7.5/spring-boot-test-2.7.5.jar:/Users/guohaijiao/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.7.5/spring-boot-test-autoconfigure-2.7.5.jar:/Users/guohaijiao/.m2/repository/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar:/Users/guohaijiao/.m2/repository/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar:/Users/guohaijiao/.m2/repository/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar:/Users/guohaijiao/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/guohaijiao/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/guohaijiao/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/guohaijiao/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/guohaijiao/.m2/repository/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0.jar:/Users/guohaijiao/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/guohaijiao/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/guohaijiao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/guohaijiao/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/Users/guohaijiao/.m2/repository/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1.jar:/Users/guohaijiao/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/guohaijiao/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.18/byte-buddy-agent-1.12.18.jar:/Users/guohaijiao/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/guohaijiao/.m2/repository/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1.jar:/Users/guohaijiao/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/guohaijiao/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-core/5.3.23/spring-core-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-jcl/5.3.23/spring-jcl-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-test/5.3.23/spring-test-5.3.23.jar:/Users/guohaijiao/.m2/repository/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0.jar:/Users/guohaijiao/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/guohaijiao/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter-test/2.2.2/mybatis-spring-boot-starter-test-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-test-autoconfigure/2.2.2/mybatis-spring-boot-test-autoconfigure-2.2.2.jar:/Users/guohaijiao/.m2/repository/org/springframework/spring-tx/5.3.23/spring-tx-5.3.23.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/guohaijiao"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/guohaijiao/geminilocktest"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/guohaijiao/geminilocktest/target/surefire/surefirebooter9036444889196405599.jar"/>
    <property name="user.script" value="Hans"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="24.0.1"/>
    <property name="user.name" value="guohaijiao"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.6.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/guohaijiao/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/21/kn51h9vn555bq1r1q77gyddc0000gn/T/"/>
    <property name="java.version" value="24.0.1"/>
    <property name="user.dir" value="/Users/guohaijiao/geminilocktest"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/guohaijiao/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="24.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="testFindAll" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.166"/>
  <testcase name="testGetProduct" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.006"/>
  <testcase name="testFindById" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.003"/>
  <testcase name="testCheckUpdate" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.005"/>
  <testcase name="testDelete" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.004"/>
  <testcase name="testInsert" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.034">
    <error message="&#10;### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;INSERT INTO product&#10; (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)&#10;VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]&#10;### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)&#10;### The error may involve com.example.optimisticlock.repository.ProductRepository.insert&#10;### The error occurred while executing an update&#10;### SQL: INSERT INTO product  (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data) VALUES (?, ?, ?, ?, ?, ?, ?, ?)&#10;### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;INSERT INTO product&#10; (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)&#10;VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]&#10;; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;INSERT INTO product&#10; (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)&#10;VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]" type="org.springframework.jdbc.BadSqlGrammarException">org.springframework.jdbc.BadSqlGrammarException: 

### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)
### The error may involve com.example.optimisticlock.repository.ProductRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO product  (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
	at com.example.optimisticlock.repository.ProductRepositoryTest.testInsert(ProductRepositoryTest.java:31)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: 
Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
	at com.example.optimisticlock.repository.ProductRepositoryTest.testInsert(ProductRepositoryTest.java:31)
</error>
    <system-out><![CDATA[&amp#27;[2m2025-09-20 11:23:23.060&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m18587&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.t.c.transaction.TransactionContext  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Began transaction (1) for test context [DefaultTestContext@367d2816 testClass = ProductRepositoryTest, testInstance = com.example.optimisticlock.repository.ProductRepositoryTest@1ccb0482, testMethod = testInsert@ProductRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b84f14 testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.optimisticlock.OptimisticLockApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@63f34b70, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5400db36, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2e8ab815, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@287f94b1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@384fc774, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@ba54932], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@8d0d52a]; rollback [true]
&amp#27;[2m2025-09-20 11:23:23.090&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m18587&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.t.c.transaction.TransactionContext  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Rolled back transaction for test: [DefaultTestContext@367d2816 testClass = ProductRepositoryTest, testInstance = com.example.optimisticlock.repository.ProductRepositoryTest@1ccb0482, testMethod = testInsert@ProductRepositoryTest, testException = org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)
### The error may involve com.example.optimisticlock.repository.ProductRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO product  (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214]
; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO product\000a (id, tenant_id, name, quantity, [*]$jacoco_data, zzcmn_fdate, version, $jacoco_data)\000aVALUES (?, ?, ?, ?, ?, ?, ?, ?)"; expected "identifier"; SQL statement:
INSERT INTO product
 (id, tenant_id, name, quantity, $jacoco_data, zzcmn_fdate, version, $jacoco_data)
VALUES (?, ?, ?, ?, ?, ?, ?, ?) [42001-214], mergedContextConfiguration = [WebMergedContextConfiguration@5b84f14 testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.optimisticlock.OptimisticLockApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@63f34b70, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5400db36, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2e8ab815, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@287f94b1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@384fc774, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@ba54932], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
    <system-err><![CDATA[java.lang.instrument.IllegalClassFormatException: Error while instrumenting java/sql/Types with JaCoCo 0.8.12.202403310830/dbfb6f2.
	at org.jacoco.agent.rt.internal_aeaf9ab.CoverageTransformer.transform(CoverageTransformer.java:94)
	at java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:257)
	at java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:594)
	at java.base/java.lang.ClassLoader.defineClass2(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1052)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:164)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:735)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:678)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:604)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:608)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:578)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:490)
	at org.springframework.jdbc.support.JdbcUtils.<clinit>(JdbcUtils.java:67)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.resolveErrorCodes(SQLErrorCodesFactory.java:235)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.lambda$setDataSource$0(SQLErrorCodeSQLExceptionTranslator.java:140)
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:97)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:141)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:102)
	at org.mybatis.spring.MyBatisExceptionTranslator.lambda$new$0(MyBatisExceptionTranslator.java:55)
	at org.mybatis.spring.MyBatisExceptionTranslator.initExceptionTranslator(MyBatisExceptionTranslator.java:106)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at com.example.optimisticlock.repository.ProductRepositoryTest.testInsert(ProductRepositoryTest.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.io.IOException: Error while instrumenting java/sql/Types with JaCoCo 0.8.12.202403310830/dbfb6f2.
	at org.jacoco.agent.rt.internal_aeaf9ab.core.instr.Instrumenter.instrumentError(Instrumenter.java:161)
	at org.jacoco.agent.rt.internal_aeaf9ab.core.instr.Instrumenter.instrument(Instrumenter.java:111)
	at org.jacoco.agent.rt.internal_aeaf9ab.CoverageTransformer.transform(CoverageTransformer.java:92)
	... 93 more
Caused by: java.lang.IllegalArgumentException: Unsupported class file major version 68
	at org.jacoco.agent.rt.internal_aeaf9ab.asm.ClassReader.<init>(ClassReader.java:200)
	at org.jacoco.agent.rt.internal_aeaf9ab.asm.ClassReader.<init>(ClassReader.java:180)
	at org.jacoco.agent.rt.internal_aeaf9ab.asm.ClassReader.<init>(ClassReader.java:166)
	at org.jacoco.agent.rt.internal_aeaf9ab.core.internal.instr.InstrSupport.classReaderFor(InstrSupport.java:280)
	at org.jacoco.agent.rt.internal_aeaf9ab.core.instr.Instrumenter.instrument(Instrumenter.java:77)
	at org.jacoco.agent.rt.internal_aeaf9ab.core.instr.Instrumenter.instrument(Instrumenter.java:109)
	... 94 more
]]></system-err>
  </testcase>
  <testcase name="testUpdate" classname="com.example.optimisticlock.repository.ProductRepositoryTest" time="0.011">
    <error message="&#10;### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;UPDATE product&#10;SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()&#10;WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]&#10;### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)&#10;### The error may involve com.example.optimisticlock.repository.ProductRepository.update&#10;### The error occurred while executing an update&#10;### SQL: UPDATE product SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW() WHERE (id = ? AND tenant_id = ? AND version = ?)&#10;### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;UPDATE product&#10;SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()&#10;WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]&#10;; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)&quot;; expected &quot;identifier&quot;; SQL statement:&#10;UPDATE product&#10;SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()&#10;WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]" type="org.springframework.jdbc.BadSqlGrammarException">org.springframework.jdbc.BadSqlGrammarException: 

### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)
### The error may involve com.example.optimisticlock.repository.ProductRepository.update
### The error occurred while executing an update
### SQL: UPDATE product SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW() WHERE (id = ? AND tenant_id = ? AND version = ?)
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
	at com.example.optimisticlock.repository.ProductRepositoryTest.testUpdate(ProductRepositoryTest.java:45)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: 
Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
	at com.example.optimisticlock.repository.ProductRepositoryTest.testUpdate(ProductRepositoryTest.java:45)
</error>
    <system-out><![CDATA[&amp#27;[2m2025-09-20 11:23:23.094&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m18587&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.t.c.transaction.TransactionContext  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Began transaction (1) for test context [DefaultTestContext@367d2816 testClass = ProductRepositoryTest, testInstance = com.example.optimisticlock.repository.ProductRepositoryTest@ecd7bee, testMethod = testUpdate@ProductRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5b84f14 testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.optimisticlock.OptimisticLockApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@63f34b70, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5400db36, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2e8ab815, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@287f94b1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@384fc774, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@ba54932], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@8d0d52a]; rollback [true]
&amp#27;[2m2025-09-20 11:23:23.101&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m18587&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.t.c.transaction.TransactionContext  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Rolled back transaction for test: [DefaultTestContext@367d2816 testClass = ProductRepositoryTest, testInstance = com.example.optimisticlock.repository.ProductRepositoryTest@ecd7bee, testMethod = testUpdate@ProductRepositoryTest, testException = org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
### The error may exist in com/example/optimisticlock/repository/ProductRepository.java (best guess)
### The error may involve com.example.optimisticlock.repository.ProductRepository.update
### The error occurred while executing an update
### SQL: UPDATE product SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW() WHERE (id = ? AND tenant_id = ? AND version = ?)
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214]
; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE product\000aSET name = ?, quantity = ?, [*]$jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()\000aWHERE (id = ? AND tenant_id = ? AND version = ?)"; expected "identifier"; SQL statement:
UPDATE product
SET name = ?, quantity = ?, $jacoco_data = ?, $jacoco_data = ?, version = version + 1, zzcmn_fdate = NOW()
WHERE (id = ? AND tenant_id = ? AND version = ?) [42001-214], mergedContextConfiguration = [WebMergedContextConfiguration@5b84f14 testClass = ProductRepositoryTest, locations = '{}', classes = '{class com.example.optimisticlock.OptimisticLockApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@63f34b70, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5400db36, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2e8ab815, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@287f94b1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@384fc774, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@ba54932], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
</testsuite>